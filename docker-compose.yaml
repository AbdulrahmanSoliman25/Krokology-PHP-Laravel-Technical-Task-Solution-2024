services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - krokology

  php:
    build:
      context: ./php
    volumes:
      - ./backend:/var/www
    networks:
      - krokology

  mysql:
    image: mysql:9.0.1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: krokology
      MYSQL_USER: krokology
      MYSQL_PASSWORD: krokology
    ports:
      - "3306:3306"
    networks:
      - krokology

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - krokology

  composer:
    image: composer:latest
    volumes:
      - ./backend:/var/www
    networks:
      - krokology
    depends_on:
      - php
    command: ['sh', '-c', 'cd /var/www && composer install']

  artisan:
    build:
      context: ./php
    volumes:
      - ./backend:/var/www
    networks:
      - krokology
    depends_on:
      - php
      - mysql
      - composer
    command: >
      sh -c 'until mysql -h "mysql" -u "krokology" -p"krokology" -e "SELECT 1"; do
        >&2 echo "MySQL is unavailable - sleeping";
        sleep 5;
      done;
      until [ -f /var/www/vendor/autoload.php ]; do
        >&2 echo "Composer dependencies not installed - sleeping";
        sleep 5;
      done;
      php artisan migrate &&
      php artisan db:seed'

  npm:
    build:
      context: ./php
    volumes:
      - ./backend:/var/www
    networks:
      - krokology
    depends_on:
      - php
    command: ['npm', 'install']

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - krokology

  supervisor:
    build:
      context: ./supervisor
      dockerfile: Dockerfile.supervisor
    volumes:
      - ./backend:/var/www/html
      - ./logs:/var/log
    networks:
      - krokology
    depends_on:
      - php
      - mysql
    command: ["supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
    healthcheck:
      test: ["CMD", "pgrep", "php"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  krokology:
    driver: bridge

volumes:
  backend_data:
